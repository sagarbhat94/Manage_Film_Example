/* 
* Generated by
* 
*      _____ _          __  __      _     _
*     / ____| |        / _|/ _|    | |   | |
*    | (___ | | ____ _| |_| |_ ___ | | __| | ___ _ __
*     \___ \| |/ / _` |  _|  _/ _ \| |/ _` |/ _ \ '__|
*     ____) |   < (_| | | | || (_) | | (_| |  __/ |
*    |_____/|_|\_\__,_|_| |_| \___/|_|\__,_|\___|_|
*
* The code generator that works in many programming languages
*
*			https://www.skaffolder.com
*
*
* You can generate the code from the command-line
*       https://npmjs.com/package/skaffolder-cli
*
*       npm install -g skaffodler-cli
*
*   *   *   *   *   *   *   *   *   *   *   *   *   *   *   *
*
* To remove this comment please upgrade your plan here: 
*      https://app.skaffolder.com/#!/upgrade
*
* Or get up to 70% discount sharing your unique link:
*       https://app.skaffolder.com/#!/register?friend=5eb0390982f82d390e783cc3
*
* You will get 10% discount for each one of your friends
* 
*/
package com.manage_film_example.db.manage_film_example_db.entity.base;

/**
 * 
 * 
  _____                      _              _ _ _     _   _     _        __ _ _      
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |     
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___ 
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|
 
                                                                                   
 * DO NOT EDIT THIS FILE!! 
 *
 *  FOR CUSTOMIZE FilmBase PLEASE EDIT ../Film.java
 * 
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER CODE GENERATION --
 * 
 */
 

/**
 * This is the model of Film object
 * 
 */
 
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.math.BigDecimal;


import org.springframework.jdbc.core.RowMapper;
import com.manage_film_example.db.manage_film_example_db.entity.Film;

public class FilmBase implements RowMapper<Film>{
	
	private Long _id;
	
	// Attributes
    private String genre;
    private String title;
    private Double year;
	
	// Relations filmMaker
	private String filmMaker;
	
	
	// Relations m:m cast
	private ArrayList<Long> cast;
	
	
	@Override
	public Film mapRow(ResultSet rs, int rowNum) throws SQLException {
		
		Film obj = new Film();
		try {
			obj.set_id(rs.getLong("id"));
			obj.setGenre(rs.getString("genre"));
			obj.setTitle(rs.getString("title"));
			obj.setYear(rs.getDouble("year"));
			
        	
        	// Relations 1:m filmMaker
			obj.setFilmMaker(rs.getString("filmMaker"));
        	
		}
		catch(Exception e) {
			e.printStackTrace();
		}
		return obj;
	}


	public Long get_id() {
		return _id;
	}

	public void set_id(Long _id) {
		this._id = _id;
	}
	
	public String getGenre() {
		return genre;
	}


	public void setGenre(String genre) {
		this.genre = genre;
	}
	public String getTitle() {
		return title;
	}


	public void setTitle(String title) {
		this.title = title;
	}
	public Double getYear() {
		return year;
	}


	public void setYear(Double year) {
		this.year = year;
	}
	
    
    // Relations 1:m filmMaker
	public String getFilmMaker() {
		return filmMaker;
	}

	public void setFilmMaker(String filmMaker) {
		this.filmMaker = filmMaker;
	}
    
    
    
    
    // Relations m:m cast
	public ArrayList<Long> getCast() {
		return cast;
	}

	public void setCast(ArrayList<Long> cast) {
		this.cast = cast;
	}
	
	
	public static class Film_cast implements RowMapper<Film_cast>{
		
		private Long _id;
		
		// Relations
	
		private Long id_Film;
		private Long id_Actor;
				
		@Override
		public Film_cast mapRow(ResultSet rs, int rowNum) throws SQLException {
			
			Film_cast obj = new Film_cast();
			try {
				obj.set_id(rs.getLong("id"));
				obj.setId_Film(rs.getLong("id_Film"));
				obj.setId_Actor(rs.getLong("id_Actor"));
			}
			catch(Exception e) {
				e.printStackTrace();
			}
			return obj;
		}
		public Long get_id() {
			return _id;
		}
	
		public void set_id(Long _id) {
			this._id = _id;
		}
	
		public Long getId_Film() {
			return id_Film;
		}
	
	
		public void setId_Film(Long id_Film) {
			this.id_Film = id_Film;
		}
	
	
		public Long getId_Actor() {
			return id_Actor;
		}
	
	
		public void setId_Actor(Long id_Actor) {
			this.id_Actor = id_Actor;
		}
	}
    
}